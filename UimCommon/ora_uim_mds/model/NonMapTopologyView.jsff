<?xml version='1.0' encoding='UTF-8'?>
<jsp:root xmlns:jsp="http://java.sun.com/JSP/Page" version="2.1" 
          xmlns:f="http://java.sun.com/jsf/core"
          xmlns:h="http://java.sun.com/jsf/html" 
          xmlns:af="http://xmlns.oracle.com/adf/faces/rich"
          xmlns:jvf="http://www.ilog.com/jviews/tlds/jviews-framework-faces.tld"
          xmlns:jvtf="http://www.ilog.com/jviews/tlds/jviews-tgo-faces.tld"
          xmlns:jv="http://www.ilog.com/jviews/tlds/jviews-faces.tld" 
          xmlns:trh="http://myfaces.apache.org/trinidad/html"
		  xmlns:c="http://java.sun.com/jsp/jstl/core"> 
<c:set var="inventoryUIBundle" value="#{adfBundle['oracle.communications.inventory.ui.common.bundle.InventoryUIBundle']}"/>
  <af:pageTemplate viewId="/oracle/communications/platform/templates/fragments/CommsUIShellMainArea.jspx"
                   id="pt1">
    <f:facet name="localArea">          
      <af:panelGroupLayout layout="scroll" id="pgl3">
           <af:resource source="script/view.js" type="javascript"/>
          
          <af:panelGroupLayout id="pgl4">
            <af:panelHeader text="#{inventoryUIBundle.TOPOLOGY_VIEW}" helpTopicId="OHW_topoView" id="ph1">
          <af:resource source="css/style.css" type="css"/>
              <!-- Start of page elements -->              
             
               <af:link action="#{NonMapTopologyViewBean.getPageAction}"  id="goToPage" visible="false"
                            binding="#{backingBeanScope.summaryPageLink}">
              <af:outputText value="#{NonMapTopologyViewBean.fromParameter}" id="ot4"/>
              <af:setActionListener from="#{NonMapTopologyViewBean.fromParameter}"
                                    to="#{backingBeanScope.oid}"/>
            </af:link>
              <!-- Declare the predefined interactors -->
              <jvf:zoomInteractor id="zoom" />
              <jvf:panInteractor id="pan"  />
              <jvtf:clientSelectInteractor id="clientSelect"/>
                <h:panelGrid styleClass="visualToolbar">
                    <af:panelGroupLayout id="pgl1" layout="horizontal">
                    <af:toolbar id="toolbar1">
                       <!-- Declare the image buttons -->
                       <!-- Notice how 'onclick' tag attribute is used -->
                      <af:group id="g1">
                       <jv:imageButton style="width: 16px;height: 16px;" 
                                       selected="true"
                                       onclick="networkCanvas.setInteractor(clientSelect)"
                                       image="/images/selectobject_ena.png" buttonGroupId="interactors"
                                       rolloverImage="/images/selectobject_ovr.png"
                                       selectedImage="/images/selectobject_dwn.png"
                                       messageBoxId="inventoryUIBundle" 
                                       title="#{inventoryUIBundle.SELECT}"
                                       message="#{inventoryUIBundle.SELECT}" />
                       <af:spacer width="5" height="10" id="s4"/>
                       <jv:imageButton style="width: 16px;height: 16px;"
                                       onclick="networkCanvas.setInteractor(zoom)"
                                       image="/images/zoomtoselection_ena.png" buttonGroupId="interactors"
                                       rolloverImage="/images/zoomtoselection_ovr.png"
                                       selectedImage="/images/zoomtoselection_dwn.png"
                                       messageBoxId="inventoryUIBundle"                      
                                       title="#{inventoryUIBundle.ZOOM}"
                                       message="#{inventoryUIBundle.ZOOM}" />
                       <af:spacer width="5" height="10" id="s5"/>
                       <jv:imageButton style="width: 16px;height: 16px;"
                                       onclick="networkCanvas.setInteractor(pan)"
                                       image="/images/pan_ena.png" buttonGroupId="interactors"
                                       rolloverImage="/images/pan_ovr.png"
                                       selectedImage="/images/pan_dwn.png" 
                                       messageBoxId="inventoryUIBundle"                     
                                           title="#{inventoryUIBundle.PAN}"
                                       message="#{inventoryUIBundle.PAN}" />
                       <af:spacer width="5" height="10" id="s6"/>
                       <jv:imageButton id="showAllButton" style="width: 16px;height: 16px;"
                                       onclick="networkCanvas.showAll(true)"
                                       image="/images/zoombestfit_ena.png"
                                       rolloverImage="/images/zoombestfit_ovr.png"
                                       selectedImage="/images/zoombestfit_dwn.png"
                                       messageBoxId="inventoryUIBundle" 
                                       title="#{inventoryUIBundle.SHOW_ALL}" 
                                       message="#{inventoryUIBundle.SHOW_ALL}"   />
                       <af:spacer width="5" height="10" id="s7"/>
                       <jv:imageButton style="width: 16px;height: 16px;"
                                       onclick="networkCanvas.zoomIn(true)"
                                       image="/images/zoomin_ena.png"
                                       rolloverImage="/images/zoomin_ovr.png"
                                       selectedImage="/images/zoomin_dwn.png" messageBoxId="inventoryUIBundle"
                                       title="#{inventoryUIBundle.ZOOM_IN}" 
                                       message="#{inventoryUIBundle.ZOOM_IN}"   />
                       <af:spacer width="5" height="10" id="s8"/>
                       <jv:imageButton style="width: 16px;height: 16px;"
                                       onclick="networkCanvas.zoomOut(true)"
                                       image="/images/zoomout_ena.png"
                                       rolloverImage="/images/zoomout_ovr.png"
                                       selectedImage="/images/zoomout_dwn.png"
                                       messageBoxId="inventoryUIBundle"
                                       title="#{inventoryUIBundle.ZOOM_OUT}" 
                                       message="#{inventoryUIBundle.ZOOM_OUT}"   />
                       <af:spacer width="5" height="10" id="s9"/>
                      </af:group>
                    
                      <af:group id="tb2">                               
                       <jv:imageButton style="width: 16px;height: 16px;"
                                       onclick="loadChildren()"
                                       image="/images/domain.gif"
                                       rolloverImage="/images/domain.gif"
                                       selectedImage="/images/domain.gif"
                                       messageBoxId="inventoryUIBundle" 
                                       title="#{inventoryUIBundle.LOAD_CHILDREN}" 
                                       message="#{inventoryUIBundle.LOAD_CHILDREN}"   />
                       <af:spacer width="5" height="10" id="s10"/>
                       
                       <jv:imageButton style="width: 16px;height: 16px;"
                                       onclick="goHome()"
                                       image="/images/home_ena.png"
                                       rolloverImage="/images/home_ovr.png"
                                       selectedImage="/images/home_dwn.png"
                                       messageBoxId="inventoryUIBundle" 
                                       title="#{inventoryUIBundle.HOME}" 
                                       message="#{inventoryUIBundle.HOME}"    />
                       <af:spacer width="5" height="10" id="s12"/>
                       <jv:imageButton style="width: 16px;height: 16px;"
                                       onclick="loadAllChildNodes()"
                                       image="/images/ungroup_ena.png"
                                       rolloverImage="/images/ungroup_ovr.png"
                                       selectedImage="/images/ungroup_dwn.png"
                                       messageBoxId="inventoryUIBundle" 
                                       title="#{inventoryUIBundle.EXPAND_ALL}"
                                       message="#{inventoryUIBundle.EXPAND_ALL}"  />
                       <af:spacer width="5" height="10" id="s13"/>
                       <jv:imageButton style="width: 16px;height: 16px;"
                                       onclick="autoDrillDownSearchObject()"
                                       image="/images/add-warning.png"
                                       rolloverImage="/images/add-warning.png"
                                       selectedImage="/images/add-warning.png"
                                       messageBoxId="inventoryUIBundle"
                                       title="#{inventoryUIBundle.AUTO_DRILL_DOWN_SEARCH_OBJECT}"
                                       message="#{inventoryUIBundle.AUTO_DRILL_DOWN_SEARCH_OBJECT}"   />
                       <af:spacer width="5" height="10" id="s14"/>
                       </af:group>
                       <af:group id="g2">
                       <jv:imageButton style="width: 16px;height: 16px;"
                                       onclick="networkCanvas.performAction('editAction',['NonMapTopologyVisualizationAdapter.setLabelLayout'], true)"
                                       image="/images/aligngoals_ena.png"
                                       rolloverImage="/images/aligngoals_ovr.png"
                                       selectedImage="/images/aligngoals_dwn.png"
                                       messageBoxId="inventoryUIBundle" 
                                       title="#{inventoryUIBundle.PERFORM_LABEL_LAYOUT}" 
                                       message="#{inventoryUIBundle.PERFORM_LABEL_LAYOUT}"   />
                       <af:spacer width="5" height="10" id="s11"/>
                       
                       <jv:imageButton style="width: 16px;height: 16px;"
                                       onclick="networkCanvas.performAction('editAction',['NonMapTopologyVisualizationAdapter.doSpringEmbedderLayout'], true)"
                                       image="/images/SpringEmbedderLayout.gif"
                                       rolloverImage="/images/SpringEmbedderLayouth.gif"
                                       selectedImage="/images/SpringEmbedderLayoutd.gif"
                                       messageBoxId="inventoryUIBundle"  
                                       title="#{inventoryUIBundle.SPRING_EMBEDDER_LAYOUT}" 
                                       message="#{inventoryUIBundle.SPRING_EMBEDDER_LAYOUT}"   />
                       <af:spacer width="5" height="10" id="s15"/>
                       <jv:imageButton style="width: 16px;height: 16px;"
                                       onclick="networkCanvas.performAction('editAction',['NonMapTopologyVisualizationAdapter.doUniformLengthEdgesLayout'], true)"
                                       image="/images/UniformLengthEdgesLayout.gif"
                                       rolloverImage="/images/UniformLengthEdgesLayouth.gif"
                                       selectedImage="/images/UniformLengthEdgesLayoutd.gif"
                                       messageBoxId="inventoryUIBundle"  
                                       title="#{inventoryUIBundle.UNIFORM_LENGTH_EDGES_LAYOUT}" 
                                       message="#{inventoryUIBundle.UNIFORM_LENGTH_EDGES_LAYOUT}"   />
                       <af:spacer width="5" height="10" id="s16"/>
                      </af:group>                    
                      
                      <af:group id="tb3">
                      <af:selectOneChoice id="businessObjects"
                                          label="#{inventoryUIBundle.SEARCH}"
                                          autoSubmit="true"
                                          valueChangeListener="#{NonMapTopologyViewBean.businessObjectChanged}"
                                          binding="#{backingBeanScope.businessObjectsBinding}">                        
                          <f:selectItems binding="#{NonMapTopologyViewBean.businessObjects}" id="si1"/>
                      </af:selectOneChoice>                       
                      <af:inputText id="businessObjectDisplayInfo" disabled="true" binding="#{backingBeanScope.businessObjectDisplayInfoBinding}"
                                    shortDesc="#{inventoryUIBundle.SELECT}"/>
                      </af:group>  
                    </af:toolbar>
                  </af:panelGroupLayout>
                </h:panelGrid>  
                  <af:panelGroupLayout id="pgl5" layout="horizontal" valign="top" halign="left">
                  <af:panelGroupLayout layout="horizontal"
                                       id="canvasArea" binding="#{backingBeanScope.topologyCanvasArea}">
                      <af:serverListener type="jsAutoDrillDownSearchObject" method="#{NonMapTopologyVisualizationAdapter.autoDrillDownSearchObject}"/>                                       
                      <af:serverListener type="jsCreateTopologyDetails" method="#{NonMapTopologyViewBean.createTopologyDetails}"/>
                      <af:serverListener type="jsNavigatePage" method="#{NonMapTopologyViewBean.navigatePage}"/>
                      <h:panelGrid border="0" columns="1" styleClass="psheet">
                      <!-- Declare the network faces component -->
                        <jvtf:networkView id="networkCanvas" 
                                          context="#{defContext}"
                                          interactorId="clientSelect" 
                                          width="950" height="600"                              
                                          binding="#{NonMapTopologyViewBean.topologyView}"  
                                          styleSheets="css/topology.css"  
                                          imageFormat="PNG"
                                          servlet = "oracle.communications.inventory.ui.framework.visualization.servlet.NetworkSyncImageServlet"
                                          waitingImage="images/waiting.gif"
                                          scrollBar="need">
                           <jvtf:selectionManager id="selectionManager" 
                                                  imageMode="false" lineColor="red" lineWidth="2"
                                                  propertyAccessor="#{NonMapTopologyInteractorBean.propertyAccessor}"
                                                  onSelectionChanged="displaySelection(selection)"/>                                                                
                         <!-- Declare the contextual menu with given popup menu factory -->
                         <jvf:contextualMenu factory="#{TopologyPopupMenuFactory}"
                                             itemStyleClass="menuItem" 
                                             itemHighlightedStyleClass="menuItemHighlighted" 
                                             itemDisabledStyleClass="menuItemDisabled" />
                      
                        </jvtf:networkView>                        
                      </h:panelGrid>
                    </af:panelGroupLayout>
                    <af:spacer width="10" height="10" id="s2"/>
                         <h:panelGrid border="1" columns="1" id="pg4" styleClass="psheet">                        
                                   <!-- Details Starts here -->
                                   <h:panelGrid id="pg6" columns="1" border="0" >
                                      <af:panelGroupLayout id="pgl2" layout="vertical">
                                              <h:panelGrid id="pg7" border="0" columns="2">
                                                <h:graphicImage url="/images/attributegroup_ena.png"/>
                                                <h:outputText value="#{inventoryUIBundle.DETAILS}" styleClass="text" style="font-weight:bold" />
                                              </h:panelGrid> 
                                              <h:panelGrid columns="2" id="pg14" binding="#{NonMapTopologyViewBean.topologyDetailsGrid}" border="0"
                                                           frame="border" cellpadding="4" cellspacing="1" width="100%"
                                                           columnClasses="psheet-cell" rowClasses="psheet-cell-bold"
                                                           styleClass="tableStyle">
                                              </h:panelGrid>
                                      </af:panelGroupLayout>
                                      <trh:script id="vars" text='var ntwkCanvasId = "#{NonMapTopologyViewBean.clientId}"; '/> 
                                      <trh:script id="sc1">
                                        var p = "";
                                        // called by the onSelectionChanged attribute on NonMapTopologyView.jsff file. It returns a map of attributes
                                        //to a javascript variable. These attributes will be used to dynamically build the Details section
                                        //in NonMapTopologyViewBean.
                                        function displaySelection(selection) {   
                                          try {
                                               if (selection.length == 1) {
                                                   p = selection[0].getObjectProperties();
                                               }else if(selection.length == 0){
                                                    p = "NOTHING_IS_SELECTED";
                                               }else if(selection.length > 1){
                                                    p = "MULTIPLE_OBJECTS_ARE_SELECTED";                                    
                                               }
                                               var ref = AdfPage.PAGE.findComponentByAbsoluteId(ntwkCanvasId);
                                               AdfCustomEvent.queue(ref, "jsCreateTopologyDetails",{props : p},true);
                                               p = "";
                                           } 
                                          catch (e) {
                                            alert("An error occurred when building property sheet." + e);
                                          }
                                        }
                                        
                                        function autoDrillDownSearchObject() {                                                                                             
                                            var ref = AdfPage.PAGE.findComponentByAbsoluteId(ntwkCanvasId);      
                                            AdfCustomEvent.queue(ref, "jsAutoDrillDownSearchObject",{props : p},true);   
                                            p = "";    
                                            clickInvisibleButton(updateADFComponentsId);
                                        }
                                        
                                        function goHome(){
                                            networkCanvas.performAction('editAction',['NonMapTopologyVisualizationAdapter.goHome'], true);
                                            var ref = AdfPage.PAGE.findComponentByAbsoluteId(ntwkCanvasId);
                                            p = "NOTHING_IS_SELECTED";
                                            AdfCustomEvent.queue(ref, "jsCreateTopologyDetails",{props : p},true);
                                            p = "";
                                            clickInvisibleButton(updateADFComponentsId);
                                        } 
                                        
                                        function loadChildren(){
                                            networkCanvas.performAction('editAction',['NonMapTopologyVisualizationAdapter.loadChildren'], true)
                                            clickInvisibleButton(updateADFComponentsId);
                                        }  
                                         
                                        function loadAllChildNodes(){
                                            networkCanvas.performAction('editAction',['NonMapTopologyVisualizationAdapter.loadAllChildNodes'], true);
                                            clickInvisibleButton(updateADFComponentsId);
                                        }
                                        
                                        function navigatePage(pageId,pageAction){
                                             var networkCanvas = AdfPage.PAGE.findComponentByAbsoluteId(ntwkCanvasId);
                                             AdfCustomEvent.queue(networkCanvas, "jsNavigatePage",{pageId : pageId ,pageAction : pageAction},true);
                                             
                                        }
                                      </trh:script>   
                                      
                                      <h:panelGrid rendered="#{NonMapTopologyViewBean.hasPrimaryPaths}"
                                                   columns="1" id="pg15"
                                                   binding="#{NonMapTopologyViewBean.primaryPathAnalysisGrid}" border="1"
                                                   frame="border" cellpadding="4" cellspacing="1" width="100%"
                                                   columnClasses="psheet-cell" rowClasses="psheet-cell-bold"
                                                   styleClass="tableStyle">                                                  
                                      </h:panelGrid>                                       
                                      <h:panelGrid rendered="#{NonMapTopologyViewBean.hasSecondaryPaths}"
                                                   columns="1" id="pg1"
                                                   binding="#{NonMapTopologyViewBean.secondaryPathAnalysisGrid}" border="1"
                                                   frame="border" cellpadding="4" cellspacing="1" width="100%"
                                                   columnClasses="psheet-cell" rowClasses="psheet-cell-bold"
                                                   styleClass="tableStyle">                                                  
                                      </h:panelGrid>
                                   </h:panelGrid>                                   
                              <!-- Overview and Details ENds  here -->
                              </h:panelGrid>
                        <!-- START - Business Object Search  Popup Definitions -->
                        <!-- START - Equipment Search and Assign Popup -->         
                        <af:popup id="assignEquipmentPopup" contentDelivery="lazyUncached" binding="#{backingBeanScope.assignEquipmentBinding}">
                              <af:dialog id="assignEquipmentDialog" closeIconVisible="true" type="none"
                                         title="#{inventoryUIBundle.ASSIGN} #{inventoryUIBundle.EQUIPMENT}">
                                  <af:panelStretchLayout id="psl1" styleClass="invSummaryPanelStretchLayout">
                                      <f:facet name="center">
                                        <af:region value="#{bindings.EquipmentSearchResultsFlow1.regionModel}" id="r1"/>
                                      </f:facet>
                                  </af:panelStretchLayout>
                              </af:dialog>
                          <af:clientListener method="goRefreshEntity" type="popupClosed"/> 
                          <af:serverListener type="refreshEntity" method="#{NonMapTopologyViewBean.refreshBODetails}"/>                          
                        </af:popup>
                        <!-- END- Equipment Search and Assign Popup -->         
                        <!-- START - LogicalDevice Search and Assign Popup -->         
                        <af:popup id="assignLogicalDevicePopup" contentDelivery="lazyUncached" binding="#{backingBeanScope.assignLogicalDeviceBinding}">
                              <af:dialog id="assignLogicalDeviceDialog" closeIconVisible="true" type="none"
                                         title="#{inventoryUIBundle.ASSIGN} #{inventoryUIBundle.LOGICAL_DEVICE}">
                                  <af:panelStretchLayout id="psl2" styleClass="invSummaryPanelStretchLayout">
                                      <f:facet name="center">
                                        <af:region value="#{bindings.LogicalDeviceSearchResultsFlow1.regionModel}" id="r2"/>
                                      </f:facet>
                                  </af:panelStretchLayout>
                              </af:dialog>
                          <af:clientListener method="goRefreshEntity" type="popupClosed"/> 
                          <af:serverListener type="refreshEntity" method="#{NonMapTopologyViewBean.refreshBODetails}"/>
                        </af:popup>
                        <!-- END- LogicalDevice Search and Assign Popup -->         
                        <!-- START - Network Search and Assign Popup -->         
                        <af:popup id="assignNetworkPopup" contentDelivery="lazyUncached" binding="#{backingBeanScope.assignNetworkBinding}">
                              <af:dialog id="assignNetworkDialog" closeIconVisible="true" type="none"
                                         title="#{inventoryUIBundle.ASSIGN} #{inventoryUIBundle.NETWORK}">
                                  <af:panelStretchLayout id="psl3" styleClass="invSummaryPanelStretchLayout">
                                      <f:facet name="center">
                                        <af:region value="#{bindings.NetworkSearchResults1.regionModel}" id="r3"/>
                                      </f:facet>
                                  </af:panelStretchLayout>  
                              </af:dialog>
                          <af:clientListener method="goRefreshEntity" type="popupClosed"/> 
                          <af:serverListener type="refreshEntity" method="#{NonMapTopologyViewBean.refreshBODetails}"/>
                        </af:popup>
                        <!-- END- Network Search and Assign Popup -->         
                        <!-- START - NetworkNode Search and Assign Popup -->         
                        <af:popup id="assignNetworkNodePopup" contentDelivery="lazyUncached" binding="#{backingBeanScope.assignNetworkNodeBinding}">
                              <af:dialog id="assignNetworkNodeDialog" closeIconVisible="true" type="none"
                                         title="#{inventoryUIBundle.ASSIGN} #{inventoryUIBundle.NETWORKNODE}">
                                  <af:panelStretchLayout id="psl4" styleClass="invSummaryPanelStretchLayout">
                                      <f:facet name="center">
                                        <af:region value="#{bindings.NetworkNodeSearchResultsFlow1.regionModel}" id="r4"/>
                                    </f:facet>
                                  </af:panelStretchLayout>  
                              </af:dialog>
                          <af:clientListener method="goRefreshEntity" type="popupClosed"/> 
                          <af:serverListener type="refreshEntity" method="#{NonMapTopologyViewBean.refreshBODetails}"/>
                        </af:popup>
                        <!-- END- NetworkNode Search and Assign Popup -->         
                        <!-- START - PhysicalDevice Search and Assign Popup -->         
                        <af:popup id="assignPhysicalDevicePopup" contentDelivery="lazyUncached" binding="#{backingBeanScope.assignPhysicalDeviceBinding}">
                              <af:dialog id="assignPhysicalDeviceDialog" closeIconVisible="true" type="none"
                                         title="#{inventoryUIBundle.ASSIGN} #{inventoryUIBundle.PHYSICALDEVICE}">
                                  <af:panelStretchLayout id="psl5" styleClass="invSummaryPanelStretchLayout">
                                        <f:facet name="center">
                                            <af:region value="#{bindings.PhysicalDeviceSearchResultsFlow1.regionModel}" id="r5"/>
                                        </f:facet>
                                  </af:panelStretchLayout>  
                              </af:dialog>
                          <af:clientListener method="goRefreshEntity" type="popupClosed"/> 
                          <af:serverListener type="refreshEntity" method="#{NonMapTopologyViewBean.refreshBODetails}"/>
                        </af:popup>
                        <!-- END- PhysicalDevice Search and Assign Popup -->         
                        <!-- START - Pipe Search and Assign Popup -->         
                        <af:popup id="assignPipePopup" contentDelivery="lazyUncached" binding="#{backingBeanScope.assignPipeBinding}">
                              <af:dialog id="assignpipeDialog" closeIconVisible="true" type="none"
                                         title="#{inventoryUIBundle.ASSIGN} #{inventoryUIBundle.PIPE}">
                                  <af:panelStretchLayout id="psl6" styleClass="invSummaryPanelStretchLayout">
                                        <f:facet name="center">
                                          <af:region value="#{bindings.PipeSearchResultsFlow1.regionModel}" id="r6"/>
                                        </f:facet>
                                  </af:panelStretchLayout>  
                              </af:dialog>
                          <af:clientListener method="goRefreshEntity" type="popupClosed"/> 
                          <af:serverListener type="refreshEntity" method="#{NonMapTopologyViewBean.refreshBODetails}"/>
                        </af:popup>
                        <!-- END- Pipe Search and Assign Popup -->         
                        <!-- START - Place Search and Assign Popup -->         
                        <af:popup id="assignPlacePopup" contentDelivery="lazyUncached" binding="#{backingBeanScope.assignPlaceBinding}">
                              <af:dialog id="assignPlaceDialog" closeIconVisible="true" type="none"
                                         title="#{inventoryUIBundle.ASSIGN} #{inventoryUIBundle.PLACE}">
                                  <af:panelStretchLayout id="psl7" styleClass="invSummaryPanelStretchLayout">
                                        <f:facet name="center">
                                          <af:region value="#{bindings.PlaceSearchResultsFlow1.regionModel}" id="r7"/>
                                        </f:facet>  
                                  </af:panelStretchLayout>                                            
                              </af:dialog>
                          <af:clientListener method="goRefreshEntity" type="popupClosed"/> 
                          <af:serverListener type="refreshEntity" method="#{NonMapTopologyViewBean.refreshBODetails}"/>
                        </af:popup>
                        <!-- END- Place Search and Assign Popup -->
                        <!-- START - Place Search and Assign Popup -->         
                        <af:popup id="assignConnectivityPopup" contentDelivery="lazyUncached" binding="#{backingBeanScope.assignConnectivityBinding}">
                              <af:dialog id="assignConnectivityDialog" closeIconVisible="true" type="none"
                                         title="#{inventoryUIBundle.ASSIGN} #{inventoryUIBundle.CONNECTIVITY}">
                                  <af:panelStretchLayout id="psl8" styleClass="invSummaryPanelStretchLayout">
                                        <f:facet name="center">
                                        <af:region value="#{bindings.TDMConnectivitySearchResultsFlow1.regionModel}" id="r8"/>
                                        </f:facet>  
                                  </af:panelStretchLayout>                                            
                              </af:dialog>
                          <af:clientListener method="goRefreshEntity" type="popupClosed"/> 
                          <af:serverListener type="refreshEntity" method="#{NonMapTopologyViewBean.refreshBODetails}"/>
                        </af:popup>
                        <!-- END- Place Search and Assign Popup -->
                        <!-- START - Place Search and Assign Popup -->         
                        <af:popup id="assignLocationPopup" contentDelivery="lazyUncached" binding="#{backingBeanScope.assignLocationBinding}">
                              <af:dialog id="assignLocationDialog" closeIconVisible="true" type="none"
                                         title="#{inventoryUIBundle.ASSIGN} #{inventoryUIBundle.LOCATION}">
                                  <af:panelStretchLayout id="psl9" styleClass="invSummaryPanelStretchLayout">
                                        <f:facet name="center">
                                        <af:region value="#{bindings.LocationSearchResultsFlow1.regionModel}" id="r9"/>
                                        </f:facet>  
                                  </af:panelStretchLayout>                                            
                              </af:dialog>
                          <af:clientListener method="goRefreshEntity" type="popupClosed"/> 
                          <af:serverListener type="refreshEntity" method="#{NonMapTopologyViewBean.refreshBODetails}"/>
                        </af:popup>
                        <!-- END- Place Search and Assign Popup -->
                        <!-- END - Business Object Search  Popup Definitions -->
                     <af:commandButton id="updateADFComponents" binding="#{backingBeanScope.updateADFComponentBinding}" partialSubmit="true" visible="false" styleClass="invisibleComponent"
                                       text="#{inventoryUIBundle.UPDATE}"/>  
                     <trh:script id="vars2" text='var updateADFComponentsId = "#{NonMapTopologyViewBean.updateADFComponentId}"; '/> 
                     <trh:script>
                        function refreshNetworkView() {    
                            networkCanvas.showAll(true);
                        }
                        
                        function clickUpdateADFComponents(){                            
                            var updateADFComponents = document.getElementById(updateADFComponentsId);
                            updateADFComponents.click();
                        }
                        
                        // TODO: The below method is a work in progress. 
                        function clickCanvasArea(){
                            var ntwkCanvas = document.getElementById(ntwkCanvasId);
                            ntwkCanvas.click();                            
                        }
                      </trh:script>
                 <!-- End of page elements -->   
              </af:panelGroupLayout>            
          </af:panelHeader>
        </af:panelGroupLayout>
      </af:panelGroupLayout>
    </f:facet>
  </af:pageTemplate>
</jsp:root>
